# version: '3.8'

services:
  db:
    image: mariadb:10.6
    container_name: coco-db
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=terry8473
      - MYSQL_DATABASE=yeezydb
    ports:
      - "3307:3306" # 로컬 3306, 호스트 3307
    volumes:
      - db_data:/var/lib/mysql
      - ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  backend:
    image: docker.io/leesumin7766/coco-backend:latest
    container_name: coco-backend
    restart: always
    ports:
        - "8080:8080"
    environment:
      # 호스트 로컬에 띄운 MariaDB 연결 (application.yml 대신 덮어쓰기)
      - SPRING_DATASOURCE_URL=jdbc:mariadb://db:3306/yeezydb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=terry8473
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.mariadb.jdbc.Driver
      # JPA 설정
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL=true

      # Redis는 compose 네트워크 내 redis 컨테이너를 가리킵니다
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379

      # JWT / Toss Secret
      - JWT_SECRET_KEY=ThisIsASecretKeyForJwtTokenGenerationExample123!
      - TOSS_SECRET_KEY=test_sk_6bJXmgo28eBORxQmb2a63LAnGKWx

    depends_on:
      - db
      - redis

  frontend:
    image: docker.io/leesumin7766/coco-frontend:latest

    container_name: coco-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend

  redis:
    image: redis:7-alpine
    container_name: coco-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  db_data:
  redis_data:
