server:
  port: 8080

spring:
  profiles:
    active: dev   # 로컬 기본: dev. 배포에선 SPRING_PROFILES_ACTIVE=prod 로 지정
  jpa:
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: update            # 테이블은 JPA가 생성/갱신
    properties:
      hibernate:
        format_sql: true

thymeleaf:
  prefix: classpath:/templates/
  suffix: .html

redis:
  host: localhost
  port: 6379
jwt:
  secret-key: ThisIsASecretKeyForJwtTokenGenerationExample123!

toss:
  secret-key: test_sk_6bJXmgo28eBORxQmb2a63LAnGKWx

logging:
  level:
    root: INFO
    org.springframework: DEBUG
    org.springframework.security: DEBUG   # <- 보안 관련 디버깅 로그
    com.example.shop: DEBUG               # <- 내 애플리케이션 로그

security:
  oauth2:
    client:
      registration:
        naver:
          client-id: 네이버_앱_클라이언트_ID
          client-secret: 네이버_앱_클라이언트_시크릿
          client-name: Naver
          authorization-grant-type: authorization_code
          redirect-uri: "{baseUrl}/login/oauth2/code/naver"
          scope:
            - name
            - email
            - profile_image
      provider:
        naver:
          authorization-uri: https://nid.naver.com/oauth2.0/authorize
          token-uri: https://nid.naver.com/oauth2.0/token
          user-info-uri: https://openapi.naver.com/v1/nid/me
          user-name-attribute: response

---
spring:
  config:
    activate:
      on-profile: dev
  datasource:
    url: jdbc:mariadb://localhost:3306/yeezydb
    username: root
    password: terry8473
    driver-class-name: org.mariadb.jdbc.Driver

  # data.sql 실행
  sql:
    init:
      mode: always
      data-locations: classpath:/data.sql
  jpa:
    defer-datasource-initialization: true

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mariadb://db:3306/yeezydb
    username: root
    password: terry8473
    driver-class-name: org.mariadb.jdbc.Driver

  # data.sql 실행
  sql:
    init:
      mode: always
      data-locations: classpath:/data.sql
  jpa:
    defer-datasource-initialization: true
